syntax = "proto3";

package build.please.remote.record;

// The Recorder service provides an addition to Google's Remote Execution API
// allowing a client to record & query executions by symbolic names that are
// more meaningful than hashes.
service Recorder {
  // Record stores the action result associated with a single execution.
  rpc Record(RecordRequest) returns (RecordResponse);

  // Query retrieves one or more records corresponding to the given labels.
  rpc Query(QueryRequest) returns (QueryResponse);
}

message RecordRequest {
  // The instance of the server to operate against.
  string instance_name = 1;
  // The symbolic name of the execution (e.g. //src/please:please)
  string name = 2;
  // The digest of the execution
  Digest digest = 3;
}

message RecordResponse {
  // Any errors are reported through gRPC's error mechanisms.
}

message QueryRequest {
  // The instance of the server to operate against.
  string instance_name = 1;
  // The set of digests to query for.
  // These queries typically take the form of build labels also, and can end in
  // /... indicating a recursive query.
  repeated string queries = 2;
}

message QueryResponse {
  // The set of digests to reply with.
  repeated Digest digests = 1;
}

// Digest is a copy of the remote execution one so we don't have to deal with
// that proto and all its dependencies. It is otherwise identical.
message Digest {
  string hash = 1;
  int64 size_bytes = 2;
}
